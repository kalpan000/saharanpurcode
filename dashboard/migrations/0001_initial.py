# Generated by Django 3.2.5 on 2022-07-14 11:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import psqlextra.manager.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='addDataCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataCenterTag', models.CharField(blank=True, max_length=30, null=True)),
                ('DataCenterName', models.CharField(blank=True, max_length=30, null=True)),
                ('sqr_mtr', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('Add_country', models.CharField(blank=True, max_length=30, null=True)),
                ('Add_state', models.CharField(blank=True, max_length=255, null=True)),
                ('Address', models.CharField(blank=True, max_length=100, null=True)),
                ('Contact', models.CharField(blank=True, max_length=100, null=True)),
                ('PersonalDet_fname', models.CharField(blank=True, max_length=128, null=True)),
                ('PersonalDet_email', models.EmailField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('Capacity_in_MW', models.FloatField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AddDataCenterRackcabinet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Rack_Label_Tag', models.CharField(blank=True, max_length=100, null=True)),
                ('RowColor', models.CharField(blank=True, max_length=10, null=True)),
                ('Rack_Type', models.CharField(blank=True, max_length=50, null=True)),
                ('Rack_Type_Information', models.IntegerField(blank=True, default=0, null=True)),
                ('Special_Notes', models.CharField(max_length=200)),
                ('is_delete', models.BooleanField(default=False)),
                ('device_height_array', models.TextField(blank=True, default='0', null=True)),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.adddatacenter')),
            ],
        ),
        migrations.CreateModel(
            name='addDataCenterRow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RackRow', models.CharField(blank=True, max_length=10, null=True)),
                ('Row_Label_Tag', models.CharField(blank=True, max_length=30, null=True)),
                ('RowColor', models.CharField(blank=True, max_length=10, null=True)),
                ('data_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.adddatacenter')),
            ],
        ),
        migrations.CreateModel(
            name='AddDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_height', models.IntegerField(blank=True, null=True)),
                ('Device_Asset_Tag', models.CharField(blank=True, max_length=50, null=True)),
                ('Device_Description', models.CharField(blank=True, max_length=200, null=True)),
                ('Unit_Location', models.IntegerField(blank=True, null=True)),
                ('type_of_device', models.CharField(blank=True, max_length=300, null=True)),
                ('network_device_category', models.CharField(blank=True, max_length=50, null=True)),
                ('network_sub_category', models.CharField(blank=True, max_length=50, null=True)),
                ('network_number_of_ports', models.IntegerField(blank=True, null=True)),
                ('network_uplink_ports_wan', models.IntegerField(blank=True, null=True)),
                ('network_connection_type_fibre', models.CharField(blank=True, max_length=50, null=True)),
                ('network_connection_type_ehthernet', models.CharField(blank=True, max_length=50, null=True)),
                ('network_connection_type_both', models.CharField(blank=True, max_length=50, null=True)),
                ('security_device_category', models.CharField(blank=True, max_length=50, null=True)),
                ('security_number_of_ports_lan', models.IntegerField(blank=True, null=True)),
                ('security_network_uplink_ports_wan', models.IntegerField(blank=True, null=True)),
                ('security_connection_type_fibre', models.CharField(blank=True, max_length=50, null=True)),
                ('security_connection_type_ehthernet', models.CharField(blank=True, max_length=50, null=True)),
                ('security_connection_type_both', models.CharField(blank=True, max_length=50, null=True)),
                ('patch_position', models.CharField(blank=True, max_length=50, null=True)),
                ('patch_port', models.IntegerField(blank=True, null=True)),
                ('server_number_of_ports', models.IntegerField(blank=True, null=True)),
                ('server_type_fibre', models.CharField(blank=True, max_length=50, null=True)),
                ('server_type_ehthernet', models.CharField(blank=True, max_length=50, null=True)),
                ('server_type_both', models.CharField(blank=True, max_length=50, null=True)),
                ('chassis_number_of_blades', models.IntegerField(blank=True, null=True)),
                ('chassis_total_blades_slots', models.IntegerField(blank=True, null=True)),
                ('chassis_type_fibre', models.CharField(blank=True, max_length=50, null=True)),
                ('chassis_type_ehthernet', models.CharField(blank=True, max_length=50, null=True)),
                ('chassis_type_both', models.CharField(blank=True, max_length=50, null=True)),
                ('load_number_of_ports', models.IntegerField(blank=True, null=True)),
                ('load_uplink_ports_wan', models.IntegerField(blank=True, null=True)),
                ('load_type_fibre', models.CharField(blank=True, max_length=50, null=True)),
                ('load_type_ehthernet', models.CharField(blank=True, max_length=50, null=True)),
                ('storage_number_of_controllers', models.IntegerField(blank=True, null=True)),
                ('storage_number_of_disks', models.IntegerField(blank=True, null=True)),
                ('storage_capicity_range', models.IntegerField(blank=True, null=True)),
                ('storage_capicity_input', models.CharField(blank=True, max_length=50, null=True)),
                ('storage_type_fibre', models.CharField(blank=True, max_length=50, null=True)),
                ('storage_type_ehthernet', models.CharField(blank=True, max_length=50, null=True)),
                ('storage_type_both', models.CharField(blank=True, max_length=50, null=True)),
                ('tapelib_number_of_magazine', models.IntegerField(blank=True, null=True)),
                ('tapelib_number_io_station', models.IntegerField(blank=True, null=True)),
                ('tapelib_type', models.CharField(blank=True, max_length=50, null=True)),
                ('tapelib_number_tape_capacity', models.IntegerField(blank=True, null=True)),
                ('tapelib_storage_capacity', models.CharField(blank=True, max_length=50, null=True)),
                ('tapelib_space_occupied', models.IntegerField(blank=True, null=True)),
                ('pdu_category', models.CharField(blank=True, max_length=50, null=True)),
                ('pdu_port', models.IntegerField(blank=True, null=True)),
                ('pdu_type', models.CharField(blank=True, max_length=50, null=True)),
                ('pdu_position', models.CharField(blank=True, max_length=50, null=True)),
                ('ups_max_loads', models.CharField(blank=True, max_length=50, null=True)),
                ('ups_number_of_power_ports', models.CharField(blank=True, max_length=50, null=True)),
                ('IP_Address_col1', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('IP_Address_col2', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('IP_Address_col3', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('IP_Address_col4', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('deviceMake', models.CharField(blank=True, max_length=200, null=True)),
                ('deviceModel', models.CharField(blank=True, max_length=200, null=True)),
                ('installDate', models.DateField(blank=True, null=True)),
                ('expiryDate', models.DateField(blank=True, null=True)),
                ('deviceOwner', models.CharField(blank=True, max_length=200, null=True)),
                ('ownerDesc', models.CharField(blank=True, max_length=200, null=True)),
                ('deviceport', models.IntegerField(blank=True, null=True)),
                ('deviceWatt', models.FloatField(blank=True, default=0.0)),
                ('deviceSupplies', models.IntegerField(blank=True, null=True)),
                ('Special_Notes', models.CharField(blank=True, max_length=200, null=True)),
                ('power_left', models.BooleanField(default=True)),
                ('power_right', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('data_center_rack', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.adddatacenterrackcabinet')),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.adddatacenter')),
                ('date_center_row', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.adddatacenterrow')),
            ],
        ),
        migrations.CreateModel(
            name='AnsibleOutput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.CharField(max_length=10000)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='APM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Appliance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ApplianceDataCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        migrations.CreateModel(
            name='AssetPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Cabels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('quantity', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CameraMonitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=300)),
                ('is_favorite', models.BooleanField(default=False)),
                ('username', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('password', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CCTV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(blank=True, max_length=50, null=True)),
                ('lname', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('msg', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='DashboardDataCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DatabaseSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='DataCenterState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('state_code', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('data_center_name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('address', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('capacity', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('sqr_mtr', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('other_info', models.TextField(blank=True, default='', null=True)),
                ('link_dc', models.URLField(default='https://www.google.com/')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceCapibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('ip', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.CharField(blank=True, max_length=50, null=True)),
                ('pwd', models.CharField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('is_snmp', models.BooleanField(default=False)),
                ('is_netconf', models.BooleanField(default=False)),
                ('is_restconf', models.BooleanField(default=False)),
                ('snmp', models.TextField(blank=True, null=True)),
                ('commString', models.CharField(blank=True, max_length=50, null=True)),
                ('netconf', models.TextField(blank=True, null=True)),
                ('restconf', models.TextField(blank=True, null=True)),
                ('schedule', models.DateField(blank=True, null=True)),
                ('is_fav', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blink', models.BooleanField(default=True)),
                ('cpu_threshold', models.FloatField(default=80)),
                ('usedRam', models.FloatField(default=80)),
                ('usedSMemory', models.FloatField(default=80)),
                ('usedStorage', models.FloatField(default=80)),
                ('iowait', models.FloatField(default=50)),
                ('temperature', models.FloatField(default=85)),
                ('country', models.CharField(blank=True, default='india', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datacenter', models.CharField(blank=True, max_length=50, null=True)),
                ('date_center_row', models.CharField(blank=True, max_length=50, null=True)),
                ('device_height', models.IntegerField(blank=True, null=True)),
                ('data_center_rack', models.CharField(blank=True, max_length=50, null=True)),
                ('Device_Asset_Tag', models.CharField(blank=True, max_length=50, null=True)),
                ('Device_Description', models.CharField(blank=True, max_length=200, null=True)),
                ('Unit_Location', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('type_of_device', models.CharField(blank=True, max_length=300, null=True)),
                ('network_device_category', models.CharField(blank=True, max_length=50, null=True)),
                ('network_sub_category', models.CharField(blank=True, max_length=50, null=True)),
                ('network_number_of_ports', models.IntegerField(blank=True, null=True)),
                ('network_uplink_ports_wan', models.IntegerField(blank=True, null=True)),
                ('network_connection_type_fibre', models.CharField(blank=True, max_length=50, null=True)),
                ('network_connection_type_ehthernet', models.CharField(blank=True, max_length=50, null=True)),
                ('network_connection_type_both', models.CharField(blank=True, max_length=50, null=True)),
                ('security_device_category', models.CharField(blank=True, max_length=50, null=True)),
                ('security_number_of_ports_lan', models.IntegerField(blank=True, null=True)),
                ('security_network_uplink_ports_wan', models.IntegerField(blank=True, null=True)),
                ('security_connection_type_fibre', models.CharField(blank=True, max_length=50, null=True)),
                ('security_connection_type_ehthernet', models.CharField(blank=True, max_length=50, null=True)),
                ('security_connection_type_both', models.CharField(blank=True, max_length=50, null=True)),
                ('patch_position', models.CharField(blank=True, max_length=50, null=True)),
                ('patch_port', models.IntegerField(blank=True, null=True)),
                ('patch_category_type_inter', models.CharField(blank=True, max_length=50, null=True)),
                ('patch_category_type_cross', models.CharField(blank=True, max_length=50, null=True)),
                ('patch_category_type_isp', models.CharField(blank=True, max_length=50, null=True)),
                ('patch_category_type_other', models.CharField(blank=True, max_length=50, null=True)),
                ('path_number_of_ports', models.IntegerField(blank=True, null=True)),
                ('server_number_of_ports', models.IntegerField(blank=True, null=True)),
                ('server_type_fibre', models.CharField(blank=True, max_length=50, null=True)),
                ('server_type_ehthernet', models.CharField(blank=True, max_length=50, null=True)),
                ('server_type_both', models.CharField(blank=True, max_length=50, null=True)),
                ('chassis_number_of_blades', models.IntegerField(blank=True, null=True)),
                ('chassis_total_blades_slots', models.IntegerField(blank=True, null=True)),
                ('chassis_type_fibre', models.CharField(blank=True, max_length=50, null=True)),
                ('chassis_type_ehthernet', models.CharField(blank=True, max_length=50, null=True)),
                ('chassis_type_both', models.CharField(blank=True, max_length=50, null=True)),
                ('load_number_of_ports', models.IntegerField(blank=True, null=True)),
                ('load_uplink_ports_wan', models.IntegerField(blank=True, null=True)),
                ('load_type_fibre', models.CharField(blank=True, max_length=50, null=True)),
                ('load_type_ehthernet', models.CharField(blank=True, max_length=50, null=True)),
                ('storage_number_of_controllers', models.IntegerField(blank=True, null=True)),
                ('storage_number_of_disks', models.IntegerField(blank=True, null=True)),
                ('storage_capicity_range', models.IntegerField(blank=True, null=True)),
                ('storage_capicity_input', models.CharField(blank=True, max_length=50, null=True)),
                ('storage_type_fibre', models.CharField(blank=True, max_length=50, null=True)),
                ('storage_type_ehthernet', models.CharField(blank=True, max_length=50, null=True)),
                ('storage_type_both', models.CharField(blank=True, max_length=50, null=True)),
                ('tapelib_number_of_magazine', models.IntegerField(blank=True, null=True)),
                ('tapelib_number_io_station', models.IntegerField(blank=True, null=True)),
                ('tapelib_type', models.CharField(blank=True, max_length=50, null=True)),
                ('tapelib_number_tape_capacity', models.IntegerField(blank=True, null=True)),
                ('tapelib_storage_capacity', models.CharField(blank=True, max_length=50, null=True)),
                ('tapelib_space_occupied', models.IntegerField(blank=True, null=True)),
                ('pdu_category', models.CharField(blank=True, max_length=50, null=True)),
                ('pdu_number_of_power_ports', models.CharField(blank=True, max_length=50, null=True)),
                ('pdu_type', models.CharField(blank=True, max_length=50, null=True)),
                ('pdu_position', models.CharField(blank=True, max_length=50, null=True)),
                ('ups_max_loads', models.CharField(blank=True, max_length=50, null=True)),
                ('ups_number_of_power_ports', models.CharField(blank=True, max_length=50, null=True)),
                ('IP_Address_col1', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('IP_Address_col2', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('IP_Address_col3', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('IP_Address_col4', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('deviceMake', models.CharField(blank=True, max_length=200, null=True)),
                ('deviceModel', models.CharField(blank=True, max_length=200, null=True)),
                ('installDate', models.DateField(blank=True, null=True)),
                ('expiryDate', models.DateField(blank=True, null=True)),
                ('deviceOwner', models.CharField(blank=True, max_length=200, null=True)),
                ('ownerDesc', models.CharField(blank=True, max_length=200, null=True)),
                ('deviceport', models.IntegerField(blank=True, null=True)),
                ('deviceWatt', models.FloatField(blank=True, default=0.0)),
                ('deviceSupplies', models.IntegerField(blank=True, null=True)),
                ('Special_Notes', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.BooleanField(default=True)),
                ('templatename', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50, unique=True)),
                ('duration', models.IntegerField()),
                ('start_date', models.DateField(auto_now_add=True)),
                ('end_date', models.DateField()),
                ('status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MyDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(blank=True, max_length=50, null=True)),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('contact', models.CharField(blank=True, max_length=50, null=True)),
                ('Location', models.CharField(blank=True, max_length=50, null=True)),
                ('type_of_device', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MyDeviceSNMPData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uptime', models.IntegerField()),
                ('storage_total', models.FloatField(default=0)),
                ('storage_used', models.FloatField(default=0)),
                ('storage_available', models.FloatField(default=0)),
                ('ram_total', models.FloatField(default=0)),
                ('ram_used', models.FloatField(default=0)),
                ('ram_available', models.FloatField(default=0)),
                ('swap_total', models.FloatField(default=0)),
                ('swap_used', models.FloatField(default=0)),
                ('swap_available', models.FloatField(default=0)),
                ('cpu', models.CharField(default='', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.mydevice')),
            ],
        ),
        migrations.CreateModel(
            name='NetworkSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Notif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.CharField(blank=True, max_length=50, null=True)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('data', models.TextField(blank=True, max_length=50, null=True)),
                ('content', models.TextField(blank=True, max_length=100, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('is_read', models.BooleanField(default=False)),
                ('is_raised', models.BooleanField(default=False)),
                ('severity', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], default='low', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('is_favorite', models.BooleanField(default=False)),
                ('username', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('password', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('cameraname', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SaveXYZ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ipaddress', models.CharField(blank=True, max_length=100)),
                ('subnet', models.CharField(blank=True, max_length=100)),
                ('gateway', models.CharField(blank=True, max_length=100)),
                ('dns1', models.CharField(blank=True, max_length=100)),
                ('dns2', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ServerSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SNMPDataCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('ip', models.TextField(default='', max_length=50)),
                ('name', models.TextField(default='', max_length=100)),
                ('description', models.TextField(default='', max_length=100)),
                ('contact', models.TextField(default='', max_length=100)),
                ('location', models.TextField(default='', max_length=100)),
                ('oid', models.TextField(default='', max_length=100)),
                ('uptime', models.IntegerField(default=0)),
                ('cpu', models.TextField(default='', max_length=100)),
                ('ram', models.TextField(default='', max_length=100)),
                ('virtual', models.TextField(default='', max_length=100)),
                ('storage', models.TextField(default='', max_length=100)),
                ('interfaces', models.TextField(default='')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        migrations.CreateModel(
            name='SnmpDeviceSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=50)),
                ('cpu_threshold', models.FloatField(default=40)),
                ('usedRam', models.FloatField(default=50)),
                ('usedSMemory', models.FloatField(default=20)),
                ('usedStorage', models.FloatField(default=50)),
            ],
        ),
        migrations.CreateModel(
            name='SNMPInterfaceDataCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('ip', models.TextField(default='', max_length=50)),
                ('name', models.TextField(default='', max_length=100)),
                ('description', models.TextField(default='', max_length=100)),
                ('mac', models.TextField(default='', max_length=50)),
                ('admin', models.TextField(default='', max_length=10)),
                ('port', models.TextField(default='', max_length=10)),
                ('inbound', models.FloatField(default=0)),
                ('outbound', models.FloatField(default=0)),
                ('mtu', models.IntegerField(default=0)),
                ('speed', models.FloatField(default=0)),
                ('errorin', models.IntegerField(default=0)),
                ('errorout', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        migrations.CreateModel(
            name='SSHServers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('packages', models.CharField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='StartApp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_start', models.BooleanField(default=False)),
                ('nfs_host', models.CharField(blank=True, max_length=100, null=True)),
                ('nfs_user', models.CharField(blank=True, max_length=100, null=True)),
                ('nfs_pwd', models.CharField(blank=True, max_length=100, null=True)),
                ('nfs_loc', models.CharField(blank=True, max_length=100, null=True)),
                ('nfs_file', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StorageSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TempIPDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.BooleanField(blank=True, null=True)),
                ('action', models.BooleanField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestModal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('value', models.IntegerField()),
                ('type', models.TextField(blank=True, default='', max_length=100, null=True)),
                ('valueArr', models.TextField(blank=True, default='', max_length=10000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WebMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='WebsiteLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_name', models.CharField(max_length=300, unique=True)),
                ('website_up', models.TextField(blank=True, default=django.utils.timezone.now)),
                ('response_time', models.TextField(blank=True)),
                ('is_favorite', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_user', models.BooleanField(default=True)),
                ('bio', models.TextField(default='NO BIO')),
                ('master_password', models.CharField(default='Test@123', max_length=100)),
                ('pic', models.ImageField(blank=True, null=True, upload_to='profile_pic')),
                ('staff_type', models.CharField(choices=[('STAFF', 'STAFF'), ('ADMIN', 'ADMIN'), ('SUPERADMIN', 'SUPERADMIN'), ('DC', 'DC')], default='STAFF', max_length=100)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TerminalLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cmd', models.CharField(max_length=200)),
                ('output', models.TextField()),
                ('device', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RaiseTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(max_length=50)),
                ('lname', models.CharField(max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='ticket/')),
                ('subject', models.CharField(max_length=50)),
                ('msg', models.TextField()),
                ('admin_response', models.CharField(blank=True, max_length=500, null=True)),
                ('accepted', models.BooleanField(default=False)),
                ('is_aprove', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assigned_users', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PduPortForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdu_type', models.CharField(blank=True, max_length=50, null=True)),
                ('pdu_port', models.IntegerField(blank=True, null=True)),
                ('device_port', models.IntegerField(blank=True, null=True)),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.adddevice')),
                ('pdudevice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pdudevice', to='dashboard.adddevice')),
                ('rack', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.adddatacenterrackcabinet')),
            ],
        ),
        migrations.CreateModel(
            name='PatchPanelPort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port', models.IntegerField(blank=True, null=True)),
                ('information', models.CharField(blank=True, max_length=50, null=True)),
                ('in_out', models.CharField(blank=True, max_length=50, null=True)),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.adddevice')),
                ('patchpanel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patchpanel', to='dashboard.adddevice')),
            ],
        ),
        migrations.CreateModel(
            name='PatchPanel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('incoming', models.BooleanField(default=False)),
                ('outgoing', models.BooleanField(default=False)),
                ('rack', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.adddatacenterrackcabinet')),
            ],
        ),
        migrations.CreateModel(
            name='MyDeviceSNMPInterface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ifindex', models.IntegerField(default=0)),
                ('inOctect', models.IntegerField(default=0)),
                ('outOctect', models.IntegerField(default=0)),
                ('inErr', models.IntegerField(default=0)),
                ('name', models.CharField(default='', max_length=500)),
                ('outErr', models.IntegerField(default=0)),
                ('mtu', models.IntegerField(default=0)),
                ('speed', models.IntegerField(default=0)),
                ('mac', models.CharField(default='', max_length=500)),
                ('adminstatus', models.BooleanField(default=False)),
                ('operstatus', models.BooleanField(default=False)),
                ('description', models.CharField(default='', max_length=500)),
                ('deviceData', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.mydevicesnmpdata')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power_on', models.BooleanField(default=False)),
                ('power_off', models.BooleanField(default=False)),
                ('patchpanel_incoming', models.IntegerField(blank=True, null=True)),
                ('patchpanel_outgoing', models.IntegerField(blank=True, null=True)),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.adddevice')),
            ],
        ),
        migrations.AddField(
            model_name='adddatacenterrackcabinet',
            name='date_center_row',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.adddatacenterrow'),
        ),
    ]
